{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/board-cache.service.ts","webpack:///./src/app/board.service.ts","webpack:///./src/app/button-page/button-page.component.css","webpack:///./src/app/button-page/button-page.component.html","webpack:///./src/app/button-page/button-page.component.ts","webpack:///./src/app/config-guard.service.ts","webpack:///./src/app/config-page/config-page.component.css","webpack:///./src/app/config-page/config-page.component.html","webpack:///./src/app/config-page/config-page.component.ts","webpack:///./src/app/config.service.ts","webpack:///./src/app/custom-validation.ts","webpack:///./src/app/error-page/error-page.component.css","webpack:///./src/app/error-page/error-page.component.html","webpack:///./src/app/error-page/error-page.component.ts","webpack:///./src/app/error.service.ts","webpack:///./src/app/errors.ts","webpack:///./src/app/global-error-handler.service.ts","webpack:///./src/app/interaction-event-handler.directive.ts","webpack:///./src/app/main-page/main-page.component.css","webpack:///./src/app/main-page/main-page.component.html","webpack:///./src/app/main-page/main-page.component.ts","webpack:///./src/app/obf-button/obf-button.component.css","webpack:///./src/app/obf-button/obf-button.component.html","webpack:///./src/app/obf-button/obf-button.component.ts","webpack:///./src/app/obfboard.ts","webpack:///./src/app/obfpage/obfpage.component.ts","webpack:///./src/app/obz.service.ts","webpack:///./src/app/obzboard-set.ts","webpack:///./src/app/progress.service.ts","webpack:///./src/app/progress/progress.component.css","webpack:///./src/app/progress/progress.component.html","webpack:///./src/app/progress/progress.component.ts","webpack:///./src/app/scanning.service.ts","webpack:///./src/app/speechbar.service.ts","webpack:///./src/app/speechbar/speechbar.component.css","webpack:///./src/app/speechbar/speechbar.component.html","webpack:///./src/app/speechbar/speechbar.component.ts","webpack:///./src/app/url-utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/environments/version.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { ConfigGuardService } from './config-guard.service';\nimport { ConfigPageComponent } from './config-page/config-page.component';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ErrorPageComponent } from './error-page/error-page.component';\n\nconst routes: Routes = [\n  { path: 'main', component: MainPageComponent, canActivate: [ConfigGuardService] },\n  { path: 'config', component: ConfigPageComponent },\n  { path: 'error', component: ErrorPageComponent },\n  { path: '', redirectTo: '/main', pathMatch: 'full' },\n  { path: '**', component: MainPageComponent, canActivate: [ConfigGuardService] }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {useHash: true}),\n    CommonModule\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"/* ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: */\\n\"","module.exports = \"<!-- ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: -->\\n<router-outlet></router-outlet>\\n\"","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport 'hammerjs';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LayoutModule } from '@angular/cdk/layout';\n\nimport { MatMenuModule, MatIconModule, MatButtonModule, MatInputModule, MatRippleModule, MatGridListModule, MatCardModule,\n  MatFormFieldModule, MatCheckboxModule, MatSnackBarModule, MatTabsModule, MatSliderModule, MatRadioModule,\n  MatSelectModule } from '@angular/material';\n\nimport { WebStorageModule } from 'ngx-store';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ButtonPageComponent } from './button-page/button-page.component';\nimport { ConfigPageComponent } from './config-page/config-page.component';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { ObfButtonComponent } from './obf-button/obf-button.component';\nimport { SpeechbarComponent } from './speechbar/speechbar.component';\nimport { GlobalErrorHandlerService } from './global-error-handler.service';\nimport { ErrorPageComponent } from './error-page/error-page.component';\nimport { OBFPageComponent } from './obfpage/obfpage.component';\nimport { ProgressComponent } from './progress/progress.component';\nimport { InteractionEventHandlerDirective } from './interaction-event-handler.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ButtonPageComponent,\n    SpeechbarComponent,\n    ConfigPageComponent,\n    MainPageComponent,\n    ObfButtonComponent,\n    ErrorPageComponent,\n    OBFPageComponent,\n    ProgressComponent,\n    InteractionEventHandlerDirective\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    MatGridListModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatTabsModule,\n    LayoutModule,\n    AppRoutingModule,\n    WebStorageModule,\n    MatRippleModule,\n    MatSliderModule,\n    MatRadioModule,\n    MatSelectModule\n  ],\n  providers: [\n    {\n      provide: ErrorHandler, useClass: GlobalErrorHandlerService\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Injectable } from '@angular/core';\nimport { LocalStorage } from '@ngx-pwa/local-storage';\nimport { OBZBoardSet } from './obzboard-set';\nimport { Observable } from 'rxjs';\nimport { map, first } from 'rxjs/operators';\nimport { OBFBoard } from './obfboard';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardCacheService {\n\n  private static BOARD_CACHE_KEY = 'ovfCurrentBoard';\n\n  constructor(private localStorage: LocalStorage) { }\n\n  public clear(): Observable<boolean> {\n    this.log('Clearing local board cache');\n    return this.localStorage.removeItem(BoardCacheService.BOARD_CACHE_KEY).pipe(first());\n  }\n\n  public retrieve(): Observable<OBZBoardSet> {\n    return this.localStorage.getItem(BoardCacheService.BOARD_CACHE_KEY).pipe(map(data => {\n      if (data) {\n        this.log('Successfully loaded board from cache');\n\n        // TODO: move this to static method inside OBZBoardSet?\n        const bs = new OBZBoardSet();\n        bs.rootBoardKey = data.rootBoardKey;\n        data.images.forEach((value: Blob, key: string) => {\n          bs.setImage(key, value);\n        });\n        data.sounds.forEach((value: string, key: string) => {\n          bs.setSound(key, value);\n        });\n        data.boards.forEach((value: object, key: string) => {\n          const board = new OBFBoard().deserialize(value);\n          board.setImageResolver(bs);\n          board.setSoundResolver(bs);\n          bs.setBoard(key, board);\n        });\n        return bs;\n      } else {\n        this.log('Cache is empty');\n        throw new Error('Cache is empty');\n      }\n    }), first());\n  }\n\n  public save(boardSet: OBZBoardSet): Observable<OBZBoardSet> {\n    return this.localStorage.setItem(BoardCacheService.BOARD_CACHE_KEY, boardSet).pipe(\n      map(success => boardSet),\n      first()\n    );\n  }\n\n  private log(message: string) {\n    console.log(`BoardCacheService: ${message}`);\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Injectable } from '@angular/core';\nimport { ObzService } from './obz.service';\nimport { Observable, Observer } from 'rxjs';\nimport { OBFBoard } from './obfboard';\nimport { OBZBoardSet } from './obzboard-set';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardService {\n  private boardSet: OBZBoardSet;\n  private currentBoardKey: string;\n  private observer: Observer<OBFBoard>;\n\n  constructor(private obzService: ObzService) {}\n\n  private addObserver = (observer: Observer<OBFBoard>) => {\n    this.observer = observer;\n    this.obzService.getBoardSet().subscribe(boardSet => {\n      this.setBoardSet(boardSet);\n    });\n  }\n\n  private setBoardSet(boardSet: OBZBoardSet) {\n    this.boardSet = boardSet;\n    this.currentBoardKey = boardSet.rootBoardKey;\n    this.home();\n  }\n\n  getBoard(): Observable<OBFBoard> {\n    return new Observable<OBFBoard>(this.addObserver);\n  }\n\n  navigateToBoard(boardKey: string) {\n    this.currentBoardKey = boardKey;\n    const board = this.boardSet.getBoard(this.currentBoardKey);\n    this.observer.next(board);\n  }\n\n  navigateToExternalBoard(boardKey: string) {\n    this.obzService.loadBoardSet(boardKey);\n  }\n\n  home() {\n    this.navigateToBoard(this.boardSet.rootBoardKey);\n  }\n}\n","module.exports = \"/* ::START::LICENCE::\\r\\nCopyright eQualityTime ©2018\\r\\nThis file is part of OVFPlayer.\\r\\nOVFPlayer is free software: you can redistribute it and/or modify\\r\\nit under the terms of the GNU General Public License as published by\\r\\nthe Free Software Foundation, either version 3 of the License, or\\r\\n(at your option) any later version.\\r\\nOVFPlayer is distributed in the hope that it will be useful,\\r\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\nGNU General Public License for more details.\\r\\nYou should have received a copy of the GNU General Public License\\r\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\r\\n::END::LICENCE:: */\\n.board {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  height: 100%;\\r\\n}\\n.boardRow {\\r\\n  display: flex;\\r\\n  flex-direction: row;\\r\\n  flex: 1 1 auto;\\r\\n  overflow: hidden;\\r\\n}\\n.boardButton {\\r\\n  flex: 1 1 auto;\\r\\n  width: 100%;\\r\\n}\\n.scanHighlight {\\r\\n  position: relative;\\r\\n}\\n.scanHighlight:after {\\r\\n  border: greenyellow solid 5px;\\r\\n  content: \\\" \\\";\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n}\\n.scanSelect {\\r\\n  position: relative;\\r\\n}\\n.scanSelect:after {\\r\\n  border: blue solid 5px;\\r\\n  content: \\\" \\\";\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n}\\r\\n\"","module.exports = \"<!-- ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: -->\\n<div class=\\\"board\\\" *ngIf=\\\"board; else noBoard\\\">\\n  <div class=\\\"boardRow\\\"\\n      *ngFor=\\\"let row of buttonProvider.getScannableCollections()\\\"\\n      [class.scanHighlight]=\\\"row.isHighlighted()\\\"\\n      [class.scanSelect]=\\\"row.isSelection()\\\"\\n      [style.height]=\\\"row.rowHeight\\\">\\n    <div class=\\\"boardButton\\\"\\n        *ngFor=\\\"let butt of row.displayButtons\\\"\\n        [class.scanHighlight]=\\\"butt && butt.isHighlighted()\\\"\\n        [class.scanSelect]=\\\"butt && butt.isSelection()\\\">\\n      <app-obf-button *ngIf=\\\"butt\\\" [butt]=\\\"butt.button\\\" [clickHandler]=\\\"handleButtonClick.bind(this)\\\"></app-obf-button>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #noBoard>\\n  <app-progress></app-progress>\\n</ng-template>\\n\"","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Component, OnInit, Output, OnDestroy } from '@angular/core';\nimport { BoardService } from '../board.service';\nimport { SpeechbarService } from '../speechbar.service';\nimport { OBFBoard, Button, LoadBoardAction } from '../obfboard';\nimport { Subscription, Subscriber } from 'rxjs';\nimport { ScanningService, ScanningModel, ScannableCollectionProvider, ScannableCollection, Scannable } from '../scanning.service';\nimport { ConfigService } from '../config.service';\n\nclass ScannableButton extends Scannable {\n  static TYPE = 'OBFButton';\n  private _button: Button;\n  private provider: ScannableButtonRowProvider;\n\n  constructor(provider: ScannableButtonRowProvider, button: Button, priority: number) {\n    super(priority, ScannableButton.TYPE);\n    this._button = button;\n    this.provider = provider;\n  }\n\n  get button(): Button {\n    return this._button;\n  }\n\n  set button(button: Button) {\n    this._button = button;\n  }\n\n  isHighlighted(): boolean {\n    return this.provider.getScanningHighlight() === this;\n  }\n\n  isSelection(): boolean {\n    return this.provider.getScanningSelection() === this;\n  }\n}\n\nclass ScannableButtonRow extends ScannableCollection {\n  static TYPE = 'OBFButtonRow';\n  private provider: ScannableButtonRowProvider;\n  displayButtons = [];\n  rowHeight: string;\n\n  constructor(provider: ScannableButtonRowProvider, board: OBFBoard, row: string[], priority: number, rowHeight: string) {\n    super(priority, ScannableButtonRow.TYPE);\n    this.provider = provider;\n    this.rowHeight = rowHeight;\n\n    row.forEach((buttonId, index) => {\n      if (buttonId) {\n        const button = new ScannableButton(provider, board.getButton(buttonId), index);\n        this.addChild(button);\n        this.displayButtons.push(button);\n      } else {\n        this.displayButtons.push(undefined);\n      }\n    });\n  }\n\n  isHighlighted(): boolean {\n    return this.provider.getScanningHighlight() === this;\n  }\n\n  isSelection(): boolean {\n    return this.provider.getScanningSelection() === this;\n  }\n}\n\nclass ScannableButtonRowProvider extends Subscriber<ScanningModel> implements ScannableCollectionProvider {\n  private rows: ScannableButtonRow[];\n  private scanningModel: ScanningModel;\n\n  constructor(board: OBFBoard, buttonPressHandler: (Button) => void) {\n    super((scanningModel: ScanningModel) => {\n      this.scanningModel = scanningModel;\n\n      if (this.scanningModel.currentSelection && this.scanningModel.currentSelection.type === ScannableButton.TYPE) {\n        const button = (<ScannableButton>this.scanningModel.currentSelection).button;\n        buttonPressHandler(button);\n      }\n    });\n    const rowHeight = (100 / board.grid.rows).toString() + '%';\n    this.rows = board.grid.order.map((row, index) => new ScannableButtonRow(this, board, row, index + 1, rowHeight));\n  }\n\n  getScannableCollections(): ScannableCollection[] {\n    return this.rows;\n  }\n\n  getScanningHighlight(): Scannable {\n    return this.scanningModel && this.scanningModel.currentHighlight;\n  }\n\n  getScanningSelection(): Scannable {\n    return this.scanningModel && this.scanningModel.currentSelection;\n  }\n}\n\n@Component({\n  selector: 'app-button-page',\n  templateUrl: './button-page.component.html',\n  styleUrls: ['./button-page.component.css']\n})\nexport class ButtonPageComponent implements OnInit, OnDestroy {\n\n  @Output()\n  board: OBFBoard;\n\n  private boardSubscription: Subscription;\n  private scanningSubscription: Subscription;\n  private buttonProvider: ScannableButtonRowProvider;\n\n  actionPerformers: {[key: string]: () => void} = {\n    ':clear' : this.speechbarService.clear.bind(this.speechbarService),\n    ':backspace' : this.speechbarService.backspace.bind(this.speechbarService),\n    ':speak' : this.speechbarService.speak.bind(this.speechbarService),\n    ':home' : this.boardService.home.bind(this.boardService),\n    ':space': this.speechbarService.space.bind(this.speechbarService)\n  };\n\n  constructor(private boardService: BoardService, private speechbarService: SpeechbarService,\n    private scanningService: ScanningService, private configService: ConfigService) { }\n\n  ngOnInit() {\n    this.loadBoard();\n  }\n\n  ngOnDestroy() {\n    if (this.boardSubscription) {\n      this.boardSubscription.unsubscribe();\n    }\n\n    if (this.scanningSubscription) {\n      this.scanningSubscription.unsubscribe();\n    }\n  }\n\n  loadBoard(): void {\n    this.boardSubscription = this.boardService.getBoard().subscribe(this.setBoard);\n  }\n\n  private setBoard = (board: OBFBoard) => {\n    if (this.scanningSubscription) {\n      this.scanningSubscription.unsubscribe();\n    }\n    this.board = board;\n    this.registerWithScanner();\n  }\n\n  registerWithScanner(): void {\n    this.buttonProvider = new ScannableButtonRowProvider(this.board, this.handleButtonClick.bind(this));\n    this.scanningSubscription = this.scanningService.getScanningModel().subscribe(this.buttonProvider);\n  }\n\n  handleButtonClick(button: Button) {\n    let soundToPlay = false;\n\n    if (button.soundId) {\n      const sound = this.board.getSound(button.soundId);\n\n      if (sound) {\n        const soundSource = sound.getSource();\n\n        if (soundSource) {\n          soundToPlay = true;\n          const audioSound = new Audio(soundSource);\n          audioSound.play();\n        }\n      }\n    }\n\n    let addToSpeechBar = true;\n    if (button.actions.length > 0) {\n      button.actions.forEach(action => this.performAction(button, action));\n      addToSpeechBar = false;\n    }\n\n    if (button.loadBoardAction) {\n      const loadBoardAction: LoadBoardAction = button.loadBoardAction;\n\n      if (loadBoardAction.path) {\n        this.boardService.navigateToBoard(loadBoardAction.path);\n      } else if (loadBoardAction.dataUrl) {\n        this.boardService.navigateToExternalBoard(loadBoardAction.dataUrl);\n      } else if (loadBoardAction.url) {\n        // TODO: redirect whole page to site!\n      }\n\n      // at this point we would still be adding things to the speech bar\n      // we only want to do this if there is a vocalisation\n      // so if there isn't a vocalisation; set addToSpeechBar to false\n      if (!button.vocalization) {\n        addToSpeechBar = false;\n      }\n    }\n\n    if (addToSpeechBar) {\n      this.speechbarService.addButton(button);\n\n      // don't say the button if there's also a sound... that'd be weird...\n      if (!soundToPlay && this.configService.buttonBehaviourConfig.speakOnTrigger) {\n        this.speechbarService.sayButton(button);\n      }\n    }\n  }\n\n  performAction(button: Button, action: string) {\n\n    if (action.startsWith('+')) {\n      this.speechbarService.appendButton(button, action);\n    } else {\n      const actionPerformer = this.actionPerformers[action];\n\n      if (actionPerformer) {\n        actionPerformer();\n      } else {\n        console.log('Unsupported action: ' + action);\n      }\n    }\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { ConfigService } from './config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigGuardService implements CanActivate {\n\n  constructor(private router: Router, private config: ConfigService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    // TODO: check more config and possibly validate it\n    const hasConfig = this.config.boardURL;\n    if (hasConfig) {\n      return true;\n    } else {\n      console.log('Redirecting to /config due to no config');\n      this.router.navigate(['/config']);\n      return false;\n    }\n  }\n}\n","module.exports = \"/* ::START::LICENCE::\\r\\nCopyright eQualityTime ©2018\\r\\nThis file is part of OVFPlayer.\\r\\nOVFPlayer is free software: you can redistribute it and/or modify\\r\\nit under the terms of the GNU General Public License as published by\\r\\nthe Free Software Foundation, either version 3 of the License, or\\r\\n(at your option) any later version.\\r\\nOVFPlayer is distributed in the hope that it will be useful,\\r\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\r\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\r\\nGNU General Public License for more details.\\r\\nYou should have received a copy of the GNU General Public License\\r\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\r\\n::END::LICENCE:: */\\r\\n.formTitle {\\r\\n  height: 100%;\\r\\n  background-color: #e0e0e0;\\r\\n  padding: 10px;\\r\\n}\\r\\n.formCard {\\r\\n  padding: 0px;\\r\\n}\\r\\n.formContainer {\\r\\n  padding: 20px;\\r\\n}\\r\\n.formInputUrl, .formInputSelection {\\r\\n  width: 100%;\\r\\n}\\r\\n.formInputField {\\r\\n  width: 100%;\\r\\n  padding-right: 10px;\\r\\n}\\r\\n.formLabel {\\r\\n  white-space: normal;\\r\\n}\\r\\n.formButtons {\\r\\n  padding: 5px;\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n.clickable {\\r\\n  cursor: pointer;\\r\\n}\\r\\n.clickable, i {\\r\\n  position: relative;\\r\\n  top: 6px;\\r\\n}\\r\\n.borderExample {\\r\\n  border: solid black;\\r\\n  width: -webkit-fit-content;\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n  display: inline-block;\\r\\n}\\r\\n.invalidTab {\\r\\n  color: red;\\r\\n}\\r\\nmat-radio-button {\\r\\n  padding: 25px;\\r\\n}\\r\\n\"","module.exports = \"<!-- ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: -->\\n<app-obfpage>\\n  <mat-card class=\\\"formCard\\\">\\n    <div class=\\\"formTitle\\\">\\n      Configuration\\n    </div>\\n    <form (ngSubmit)=\\\"save()\\\" #configForm=\\\"ngForm\\\">\\n\\n      <div class=\\\"formButtons\\\">\\n        <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!configForm.form.valid\\\">Save</button>\\n      </div>\\n      <mat-tab-group>\\n        <mat-tab ngModelGroup=\\\"boardURL\\\" #boardURLCtrl=\\\"ngModelGroup\\\">\\n          <ng-template mat-tab-label>\\n            <mat-icon *ngIf=\\\"boardURLCtrl.invalid\\\" class=\\\"invalidTab\\\">error</mat-icon>\\n            <span [class.invalidTab]=\\\"boardURLCtrl.invalid\\\" name=\\\"boardURL\\\">Board URL</span>\\n          </ng-template>\\n          <div class=\\\"formContainer\\\">\\n            <mat-card>\\n              <mat-form-field class=\\\"formInputField\\\">\\n                <input [(ngModel)]=\\\"boardURL\\\" required matInput name=\\\"boardURL\\\" placeholder=\\\"URL for obf/obz file\\\" class=\\\"formInputUrl\\\">\\n              </mat-form-field>\\n              <div class=\\\"clickable\\\" (click)=\\\"copyToClipboard()\\\"><i class=\\\"material-icons\\\">link</i>&nbsp;Create link</div>\\n            </mat-card>\\n          </div>\\n        </mat-tab>\\n        <mat-tab ngModelGroup=\\\"speechbarBehaviour\\\" #speechbarBehaviourCtrl=\\\"ngModelGroup\\\">\\n          <ng-template mat-tab-label>\\n            <mat-icon *ngIf=\\\"speechbarBehaviourCtrl.invalid\\\" class=\\\"invalidTab\\\">error</mat-icon>\\n            <span [class.invalidTab]=\\\"speechbarBehaviourCtrl.invalid\\\" name=\\\"speechbarBehaviour\\\">Speechbar behaviour</span>\\n          </ng-template>\\n          <div class=\\\"formContainer\\\">\\n            <mat-card>\\n              <mat-checkbox [(ngModel)]=\\\"speakOnSpeechbarClick\\\" name=\\\"speakOnSpeechbarClick\\\">\\n                <span class=\\\"formLabel\\\">Speak when speechbar is clicked</span>\\n              </mat-checkbox>\\n            </mat-card>\\n            <mat-card>\\n              <mat-checkbox [(ngModel)]=\\\"showIconsInSpeechbar\\\" name=\\\"showIconsInSpeechbar\\\">\\n                <span class=\\\"formLabel\\\">Display button images and labels in speechbar (instead of vocalisation text)</span>\\n              </mat-checkbox>\\n            </mat-card>\\n          </div>\\n        </mat-tab>\\n        <mat-tab ngModelGroup=\\\"buttonBehaviour\\\" #buttonBehaviourCtrl=\\\"ngModelGroup\\\">\\n          <ng-template mat-tab-label>\\n            <mat-icon *ngIf=\\\"buttonBehaviourCtrl.invalid\\\" class=\\\"invalidTab\\\">error</mat-icon>\\n            <span [class.invalidTab]=\\\"buttonBehaviourCtrl.invalid\\\" name=\\\"buttonBehaviour\\\">Button press behaviour</span>\\n          </ng-template>\\n          <div class=\\\"formContainer\\\">\\n            <mat-card>\\n              <mat-checkbox [(ngModel)]=\\\"buttonBehaviourConfig.speakOnTrigger\\\" name=\\\"buttonBehaviourConfig.speakOnTrigger\\\">\\n                <span class=\\\"formLabel\\\">Speak when button is pressed (as well as adding to speechbar)</span>\\n              </mat-checkbox>\\n            </mat-card>\\n            <mat-card>\\n              <mat-radio-group [(ngModel)]=\\\"buttonBehaviourConfig.triggerEvent\\\" name=\\\"buttonBehaviourConfig.triggerEvent\\\">\\n                <div class=\\\"formLabel\\\">Event to use to trigger button usage</div>\\n                <mat-radio-button [value]=\\\"interactionEventType.click\\\">Full click</mat-radio-button>\\n                <mat-radio-button [value]=\\\"interactionEventType.mouseup\\\">Release</mat-radio-button>\\n                <mat-radio-button [value]=\\\"interactionEventType.mousedown\\\">Press</mat-radio-button>\\n              </mat-radio-group>\\n            </mat-card>\\n          </div>\\n        </mat-tab>\\n        <mat-tab ngModelGroup=\\\"displayedButtons\\\" #displayedButtonsCtrl=\\\"ngModelGroup\\\">\\n          <ng-template mat-tab-label>\\n            <mat-icon *ngIf=\\\"displayedButtonsCtrl.invalid\\\" class=\\\"invalidTab\\\">error</mat-icon>\\n            <span [class.invalidTab]=\\\"displayedButtonsCtrl.invalid\\\" name=\\\"displayedButtons\\\">Permanent buttons</span>\\n          </ng-template>\\n          <div class=\\\"formContainer\\\">\\n            <mat-card>\\n              <mat-checkbox [(ngModel)]=\\\"displayedButtons.showSpeakButton\\\" name=\\\"showSpeakButton\\\">\\n                <span class=\\\"formLabel\\\">Speak button always shown</span>\\n              </mat-checkbox>\\n            </mat-card>\\n            <mat-card>\\n              <mat-checkbox [(ngModel)]=\\\"displayedButtons.showBackspaceButton\\\" name=\\\"showBackspaceButton\\\">\\n                <span class=\\\"formLabel\\\">Backspace button always shown</span>\\n              </mat-checkbox>\\n            </mat-card>\\n            <mat-card>\\n              <mat-checkbox [(ngModel)]=\\\"displayedButtons.showClearButton\\\" name=\\\"showClearButton\\\">\\n                <span class=\\\"formLabel\\\">Clear button always shown</span>\\n              </mat-checkbox>\\n            </mat-card>\\n            <mat-card>\\n              <mat-checkbox [(ngModel)]=\\\"displayedButtons.showHomeButton\\\" name=\\\"showHomeButton\\\">\\n                <span class=\\\"formLabel\\\">Home button always shown</span>\\n              </mat-checkbox>\\n            </mat-card>\\n          </div>\\n        </mat-tab>\\n        <mat-tab ngModelGroup=\\\"voiceConfig\\\" #voiceConfigCtrl=\\\"ngModelGroup\\\">\\n          <ng-template mat-tab-label>\\n            <mat-icon *ngIf=\\\"voiceConfigCtrl.invalid\\\" class=\\\"invalidTab\\\">error</mat-icon>\\n            <span [class.invalidTab]=\\\"voiceConfigCtrl.invalid\\\" name=\\\"voiceConfig\\\">Voice Settings</span>\\n          </ng-template>\\n          <div class=\\\"formContainer\\\">\\n            <mat-card>\\n              <mat-form-field class=\\\"formInputSelection\\\">\\n                <mat-select [(ngModel)]=\\\"voiceConfig.userVoice\\\" name=\\\"userVoice\\\" placeholder=\\\"User Voice\\\">\\n                  <mat-option>Use default</mat-option>\\n                  <mat-option *ngFor=\\\"let voice of availableVoices()\\\" [value]=\\\"voice.voiceURI\\\">\\n                    {{voice.name + \\\" (\\\" + voice.lang +\\\")\\\"}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </mat-card>\\n          </div>\\n        </mat-tab>\\n        <mat-tab ngModelGroup=\\\"scanning\\\" #scanningCtrl=\\\"ngModelGroup\\\">\\n          <ng-template mat-tab-label>\\n            <mat-icon *ngIf=\\\"scanningCtrl.invalid\\\" class=\\\"invalidTab\\\">error</mat-icon>\\n            <span [class.invalidTab]=\\\"scanningCtrl.invalid\\\" name=\\\"scanning\\\">Scanning</span>\\n          </ng-template>\\n          <div class=\\\"formContainer\\\">\\n            <mat-card>\\n              <mat-checkbox [(ngModel)]=\\\"scanningConfig.enabled\\\" name=\\\"scanningEnabled\\\">\\n                <span class=\\\"formLabel\\\">Enable scanning</span>\\n              </mat-checkbox>\\n            </mat-card>\\n            <mat-card>\\n              <mat-form-field class=\\\"formInputField\\\">\\n                <input [required]=\\\"scanningConfig.enabled\\\" type=\\\"number\\\" [(ngModel)]=\\\"scanningConfig.time\\\" name=\\\"scanningTime\\\"\\n                        matInput placeholder=\\\"Time to stay on each scanned item (in milliseconds)\\\">\\n              </mat-form-field>\\n            </mat-card>\\n          </div>\\n        </mat-tab>\\n        <mat-tab ngModelGroup=\\\"appearance\\\" #appearanceCtrl=\\\"ngModelGroup\\\">\\n          <ng-template mat-tab-label>\\n            <mat-icon *ngIf=\\\"appearanceCtrl.invalid\\\" class=\\\"invalidTab\\\">error</mat-icon>\\n            <span [class.invalidTab]=\\\"appearanceCtrl.invalid\\\" name=\\\"appearance\\\">Appearance</span>\\n          </ng-template>\\n          <div class=\\\"formContainer\\\">\\n            <mat-card>\\n              <div>\\n                <mat-slider min=\\\"1\\\" max=\\\"10\\\" step=\\\"1\\\" color=\\\"Primary\\\"\\n                  [(ngModel)]=\\\"appearanceConfig.borderThickness\\\" name=\\\"borderThickness\\\" thumbLabel=\\\"true\\\"\\n                  (input)=\\\"borderThicknessChange($event)\\\"\\n                ></mat-slider>\\n                <div class=\\\"borderExample\\\" [style.border-width]=\\\"appearanceConfig.borderThickness + 'px'\\\">Border Thickness</div>\\n              </div>\\n            </mat-card>\\n          </div>\\n        </mat-tab>\\n      </mat-tab-group>\\n    </form>\\n  </mat-card>\\n  <p>Version: {{getVersion()}}</p>\\n</app-obfpage>\\n\"","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ConfigService, ButtonDisplayConfig, ScanningConfig, AppearanceConfig, ButtonBehaviourConfig,\n  InteractionEventType, VoiceConfig} from '../config.service';\nimport { MatSnackBar } from '@angular/material';\nimport { VERSION } from '../../environments/version';\nimport { BoardCacheService } from '../board-cache.service';\n\n@Component({\n  selector: 'app-config-page',\n  templateUrl: './config-page.component.html',\n  styleUrls: ['./config-page.component.css']\n})\nexport class ConfigPageComponent implements OnInit {\n\n  PAGESET_PARAM = 'pagesetURL';\n\n  boardURL: string;\n  showIconsInSpeechbar: boolean;\n  speakOnSpeechbarClick: boolean;\n  displayedButtons: ButtonDisplayConfig;\n  scanningConfig: ScanningConfig;\n  appearanceConfig: AppearanceConfig;\n  buttonBehaviourConfig: ButtonBehaviourConfig;\n  voiceConfig: VoiceConfig;\n  interactionEventType = InteractionEventType;\n\n  constructor(\n    private configService: ConfigService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private snackBar: MatSnackBar,\n    private boardCache: BoardCacheService) { }\n\n  ngOnInit() {\n    this.boardURL = this.configService.boardURL;\n    this.displayedButtons = this.copyConfig(this.configService.displayedButtons);\n    this.showIconsInSpeechbar = this.configService.showIconsInSpeechbar;\n    this.speakOnSpeechbarClick = this.configService.speakOnSpeechbarClick;\n    this.scanningConfig = this.copyConfig(this.configService.scanningConfig);\n    this.appearanceConfig = this.copyConfig(this.configService.appearanceConfig);\n    this.buttonBehaviourConfig = this.copyConfig(this.configService.buttonBehaviourConfig);\n    this.voiceConfig = this.copyConfig(this.configService.voiceConfig);\n\n    const configURLParam = this.route.snapshot.queryParamMap.get(this.PAGESET_PARAM);\n    if (configURLParam) {\n      this.boardURL = configURLParam;\n      this.save();\n    }\n  }\n\n  private copyConfig(config: any): any {\n    return JSON.parse(JSON.stringify(config));\n  }\n\n  save() {\n    this.configService.boardURL = this.boardURL;\n    this.configService.displayedButtons = this.displayedButtons;\n    this.configService.showIconsInSpeechbar = this.showIconsInSpeechbar;\n    this.configService.speakOnSpeechbarClick = this.speakOnSpeechbarClick;\n    this.configService.scanningConfig = this.scanningConfig;\n    this.configService.appearanceConfig = this.appearanceConfig;\n    this.configService.buttonBehaviourConfig = this.buttonBehaviourConfig;\n    this.configService.voiceConfig = this.voiceConfig;\n    // TODO: some kind of validation\n\n    // clear local cache of page to force a refresh\n    this.boardCache.clear().subscribe(\n      () => {\n        this.router.navigate(['/main']);\n      },\n      (error) => {\n        // not much we can do really\n        console.error('Error clearing cache', error);\n        this.router.navigate(['/main']);\n      }\n    );\n  }\n\n  copyToClipboard() {\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = `${document.location.href}?${this.PAGESET_PARAM}=${encodeURI(this.boardURL)}`;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n    this.snackBar.open('Configuration link copied to clipboard', '', { duration: 1000 });\n  }\n\n  getVersion() {\n    return VERSION.tag;\n  }\n\n  borderThicknessChange(event: any) {\n    this.appearanceConfig.borderThickness = event.value;\n  }\n\n  availableVoices() {\n    return (<any>window).speechSynthesis.getVoices();\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Injectable } from '@angular/core';\nimport { LocalStorage } from 'ngx-store';\nimport { Subject } from 'rxjs';\n\nexport interface ButtonDisplayConfig {\n  showSpeakButton: boolean;\n  showBackspaceButton: boolean;\n  showClearButton: boolean;\n  showHomeButton: boolean;\n}\n\nexport interface ScanningConfig {\n  enabled: boolean;\n  time: number;\n}\n\nexport interface AppearanceConfig {\n  borderThickness: number;\n}\n\nexport enum InteractionEventType {\n  click = 'click',\n  mouseup = 'mouseup',\n  mousedown = 'mousedown'\n}\n\nexport interface ButtonBehaviourConfig {\n  speakOnTrigger: boolean;\n  triggerEvent: InteractionEventType;\n}\n\nexport interface VoiceConfig {\n  userVoice: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  @LocalStorage() _boardURL = 'https://dl.dropboxusercontent.com/s/oiwfo47fprv3jl4/ck20.obz?dl=1';\n  @LocalStorage() _showIconsInSpeechbar = true;\n  @LocalStorage() _speakOnSpeechbarClick = true;\n  @LocalStorage() _displayedButtons: ButtonDisplayConfig = {\n    showSpeakButton: true,\n    showBackspaceButton: true,\n    showClearButton: true,\n    showHomeButton: false\n  };\n  @LocalStorage() _scanningConfig: ScanningConfig = {\n    enabled: false,\n    time: 1000,\n  };\n  @LocalStorage() _appearanceConfig: AppearanceConfig = {\n    borderThickness: 2\n  };\n  @LocalStorage() _buttonBehaviourConfig: ButtonBehaviourConfig = {\n    speakOnTrigger: false,\n    triggerEvent: InteractionEventType.click\n  };\n  @LocalStorage() _voiceConfig: VoiceConfig = {\n    userVoice: undefined\n  };\n\n  private voiceConfigSource = new Subject<VoiceConfig>();\n  voiceConfig$ = this.voiceConfigSource.asObservable();\n\n  constructor() { }\n\n  get boardURL(): string {\n    return this._boardURL;\n  }\n\n  get displayedButtons(): ButtonDisplayConfig {\n    return this._displayedButtons;\n  }\n\n  get showIconsInSpeechbar(): boolean {\n    return this._showIconsInSpeechbar;\n  }\n\n  get speakOnSpeechbarClick(): boolean {\n    return this._speakOnSpeechbarClick;\n  }\n\n  get scanningConfig(): ScanningConfig {\n    return this._scanningConfig;\n  }\n\n  get appearanceConfig(): AppearanceConfig {\n    return this._appearanceConfig;\n  }\n\n  get buttonBehaviourConfig(): ButtonBehaviourConfig {\n    return this._buttonBehaviourConfig;\n  }\n\n  get voiceConfig(): VoiceConfig {\n    return this._voiceConfig;\n  }\n\n  set boardURL(boardURL: string) {\n    this._boardURL = boardURL;\n  }\n\n  set displayedButtons(displayedButtons: ButtonDisplayConfig) {\n    this._displayedButtons = displayedButtons;\n  }\n\n  set showIconsInSpeechbar(showIconsInSpeechbar: boolean) {\n    this._showIconsInSpeechbar = showIconsInSpeechbar;\n  }\n  set speakOnSpeechbarClick(speakOnSpeechbarClick: boolean) {\n    this._speakOnSpeechbarClick = speakOnSpeechbarClick;\n  }\n\n  set scanningConfig(scanningConfig: ScanningConfig) {\n    this._scanningConfig = scanningConfig;\n  }\n\n  set appearanceConfig(appearanceConfig: AppearanceConfig) {\n    this._appearanceConfig = appearanceConfig;\n  }\n\n  set buttonBehaviourConfig(buttonBehaviourConfig: ButtonBehaviourConfig) {\n    this._buttonBehaviourConfig = buttonBehaviourConfig;\n  }\n\n  set voiceConfig(voiceConfig: VoiceConfig) {\n    this._voiceConfig = voiceConfig;\n    this.voiceConfigSource.next(this._voiceConfig);\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { registerDecorator, ValidationOptions, ValidationArguments } from 'class-validator';\n\nexport function OneOf(validationProperties: string[], validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      name: 'OneOf',\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [validationProperties],\n      options: validationOptions,\n      validator: {\n        validate(value: any, args: ValidationArguments) {\n          const theObject = <any>args.object;\n          function isValid(element: string): boolean {\n            const val = theObject[element];\n            return val !== undefined && val !== null;\n          }\n          return (<Array<string>>args.constraints[0]).some(isValid);\n        }\n      }\n    });\n  };\n}\n\nexport function Check2DArray(widthProperty: string, heightProperty: string, validationOptions?: ValidationOptions) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      name: 'Check2DArray',\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [widthProperty, heightProperty],\n      options: validationOptions,\n      validator: {\n        validate(value: any, args: ValidationArguments) {\n\n          const widthName = args.constraints[0];\n          const heightName = args.constraints[1];\n\n          const widthValue = (args.object as any)[widthName];\n          const heightValue = (args.object as any)[heightName];\n\n          if (value.length === heightValue) {\n            let count = 0;\n            for (const row of value) {\n              count++;\n              if (row.length !== widthValue) {\n                this.message = `Row ${count} is of width ${row.length}, but it should be ${widthValue}`;\n                return false;\n              }\n            }\n            return true;\n          } else {\n            this.message = `Grid has ${value.length} rows but should have ${heightValue}`;\n            return false;\n          }\n        },\n\n        defaultMessage(args: ValidationArguments) {\n          return this.message;\n        }\n      }\n    });\n  };\n}\n","module.exports = \"/* ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: */\\n.errorCard {\\n  margin: 100px;\\n}\\n.label {\\n  font-weight: bold;\\n  font-size: larger;\\n  vertical-align: top;\\n}\\n.message {\\n  background-color: #eee;\\n  border: lightgrey solid 1px;\\n  padding: 1em;\\n  margin: 0px;\\n  white-space: pre-wrap;\\n}\\ntd {\\n  padding: 1em;\\n}\\n\"","module.exports = \"<!-- ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: -->\\n<app-obfpage>\\n  <mat-card class=\\\"errorCard\\\">\\n    <h2>\\n      Oh no! Something went wrong!\\n    </h2>\\n    <table *ngIf=\\\"error\\\">\\n      <tr>\\n        <td class=\\\"label\\\">Location</td>\\n        <td><pre class=\\\"message\\\">{{error.location}}</pre></td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"label\\\">Message</td>\\n        <td><pre class=\\\"message\\\">{{error.message}}</pre></td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"label\\\">Cause</td>\\n        <td><pre class=\\\"message\\\">{{error.causeChain}}</pre></td>\\n      </tr>\\n    </table>\\n    <button mat-raised-button (click)=\\\"goToConfig()\\\">Go to config page</button>\\n    <p>If you need help resolving this issue or believe it may be an issue on our side, please don't hesitate to contact us.</p>\\n    <a *ngIf=\\\"error\\\" [href]=\\\"errorHRef\\\" target=\\\"_top\\\" mat-raised-button>Send error report</a>\\n  </mat-card>\\n</app-obfpage>\\n\"","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Component, OnInit } from '@angular/core';\nimport { ErrorService, ErrorDetails } from '../error.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  error: ErrorDetails;\n\n  constructor(private errorService: ErrorService, private router: Router) { }\n\n  ngOnInit() {\n    this.error = this.errorService.lastError;\n  }\n\n  goToConfig() {\n    this.router.navigate(['/config']);\n  }\n\n  get errorHRef(): string {\n    let href = 'mailto:support@equalitytime.co.uk';\n    href += '?subject=' + encodeURI(this.error.message);\n    href += '&body=' + encodeURI(this.errorAsString());\n    return href;\n  }\n\n  private errorAsString(): string {\n    let errorString = 'Location: ' + this.error.location;\n    errorString += '\\nMessage: ' + this.error.message;\n    errorString += '\\nCause: ' + this.error.causeChain;\n    return errorString;\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Injectable } from '@angular/core';\n\nexport class ErrorDetails {\n  location: string;\n  message: string;\n  causeChain: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  private _lastError: ErrorDetails;\n\n  constructor() { }\n\n  get lastError(): ErrorDetails {\n    return this._lastError;\n  }\n\n  set lastError(error: ErrorDetails) {\n    this._lastError = error;\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nexport class OpenVoiceFactoryError extends Error {\n\n  public    cause:     Error;\n  protected clz:       string;\n  public    errorCode: number;\n\n  constructor(errorCode: number, message?: string, cause?: Error) {\n    super(message);\n    this.cause = cause;\n    this.clz = 'OpenVoiceFactoryError';\n    this.errorCode = errorCode;\n  }\n}\n\nexport class FatalOpenVoiceFactoryError extends OpenVoiceFactoryError {\n\n  constructor(errorCode: number, message?: string, cause?: Error) {\n    super(errorCode, message, cause);\n    this.clz = 'FatalOpenVoiceFactoryError';\n  }\n}\n\nexport class ErrorCodes {\n  static MISSING_MANIFEST    = 0;\n  static OBF_LOAD_ERROR      = 1;\n  static OBZ_PARSE_ERROR     = 2;\n  static OBZ_DOWNLOAD_ERROR  = 3;\n  static MANIFEST_LOAD_ERROR = 4;\n  static ZIP_PARSE_ERROR     = 5;\n  static IMAGE_LOAD_ERROR    = 6;\n  static SOUND_LOAD_ERROR    = 7;\n  static BOARD_PARSE_ERROR   = 8;\n  static MANIFEST_JSON_ERROR = 9;\n  static BOARD_NOT_THERE     = 10;\n  static SOUND_NOT_THERE     = 11;\n  static IMAGE_NOT_THERE     = 12;\n  static OBF_VALIDATION      = 13;\n  static INVALID_ROOT        = 14;\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Injectable, ErrorHandler, Injector, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ErrorDetails, ErrorService } from './error.service';\n\n@Injectable()\nexport class GlobalErrorHandlerService implements ErrorHandler {\n\n  constructor(private injector: Injector) { }\n\n  handleError(error: any) {\n\n    const zone   = this.injector.get(NgZone);\n    const router = this.injector.get(Router);\n    const errSer = this.injector.get(ErrorService);\n\n    console.error(error);\n    // TODO: buffer logs\n    console.log(`Error on page ${router.url}: ${error.message}`);\n\n    // Pull reason out of a promise error if it is one\n    if (error.rejection) {\n      error = error.rejection;\n    }\n\n    const errorDetails = new ErrorDetails();\n    errorDetails.message = error.message;\n    errorDetails.location = router.url;\n\n    let cause = error.cause;\n    while (cause) {\n      errorDetails.causeChain = errorDetails.causeChain ? errorDetails.causeChain + '\\n' + cause.toString() : cause.toString();\n      console.log(`Caused by: ${cause.toString()}`);\n      cause = cause.cause;\n      // TODO: decent stack trace?\n    }\n\n    errSer.lastError = errorDetails;\n\n    // if we've got a fatal error then go to the error page\n    if ('FatalOpenVoiceFactoryError' === error.clz) {\n      zone.run(() => {\n        router.navigate(['/error']);\n      });\n    }\n  }\n}\n","import { Directive, HostListener, Input } from '@angular/core';\nimport { ConfigService, InteractionEventType } from './config.service';\n\n@Directive({\n  selector: '[appInteractionEventHandler]'\n})\nexport class InteractionEventHandlerDirective {\n\n  @Input('appInteractionEventHandler')\n  private appInteractionEventHandler: () => void;\n\n  constructor(private config: ConfigService) { }\n\n  @HostListener('mouseup') onRelease() {\n    this.handleEvent(InteractionEventType.mouseup);\n  }\n\n  @HostListener('mousedown') onPress() {\n    this.handleEvent(InteractionEventType.mousedown);\n  }\n\n  @HostListener('click') onClick() {\n    this.handleEvent(InteractionEventType.click);\n  }\n\n  handleEvent(eventType: InteractionEventType) {\n    if (eventType === this.config.buttonBehaviourConfig.triggerEvent) {\n      this.appInteractionEventHandler();\n    }\n  }\n}\n","module.exports = \"/* ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: */\\n.speechbar {\\n  height: 20vh;\\n}\\n.buttonPage {\\n  height: 80vh;\\n}\\n.scanRegion {\\n  position: relative;\\n}\\n.scanRegion:after {\\n  content: \\\" \\\";\\n  position: absolute;\\n  z-index: 10;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n\"","module.exports = \"<!-- ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: -->\\n<div class=\\\"scanRegion\\\" *ngIf=\\\"scanningEnabled(); else content;\\\" (click)=\\\"handleClick()\\\">\\n    <ng-container *ngTemplateOutlet=\\\"content\\\"></ng-container>\\n</div>\\n\\n\\n<ng-template #content>\\n  <div class=\\\"speechbar\\\"><app-speechbar></app-speechbar></div>\\n  <div class=\\\"buttonPage\\\"><app-button-page></app-button-page></div>\\n</ng-template>\\n\"","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Component, OnInit } from '@angular/core';\nimport { ScanningService } from '../scanning.service';\nimport { ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor(private scanningService: ScanningService, private configService: ConfigService) { }\n\n  ngOnInit() {\n  }\n\n  scanningEnabled(): boolean {\n    return this.configService.scanningConfig.enabled;\n  }\n\n  handleClick() {\n    this.scanningService.handleInteraction();\n  }\n\n}\n","module.exports = \"/* ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: */\\n.buttonDiv {\\n  width: calc(100% - 2 * var(--borderWidth));\\n  height: calc(100% - 2 * var(--borderWidth));\\n  border: var(--borderWidth) solid;\\n  display: flex;\\n  flex-direction: column;\\n  word-break: break-word;\\n}\\n.buttonImageDiv {\\n  width: 100%;\\n  height: 100%;\\n  min-height: 0;\\n  display: flex;\\n}\\n.buttonImage {\\n  width: 100%;\\n  height: 100%;\\n  -o-object-fit: contain;\\n     object-fit: contain;\\n  pointer-events: none;\\n}\\n.buttonLabel {\\n  text-align: center;\\n}\\n.ripple {\\n  position: relative;\\n  overflow: hidden;\\n}\\n.ripple:hover {\\n  -webkit-transform: scale(0.98, 0.98);\\n          transform: scale(0.98, 0.98);\\n}\\n.pageTurn:before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  --turn-size: 16px;\\n  left: calc(100% - var(--turn-size));\\n  border-width: 0 var(--turn-size) var(--turn-size) 0;\\n  border-style: solid;\\n  border-color: #fff #fff #658E15 #658E15;\\n  background: #658E15;\\n  box-shadow: 0 1px 1px rgba(0,0,0,0.3), -1px 1px 1px rgba(0,0,0,0.2);\\n  display: block;\\n  width: 0;\\n}\\n\"","module.exports = \"<!-- ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: -->\\n<div class=\\\"buttonDiv\\\" [appInteractionEventHandler]=\\\"handleClick.bind(this)\\\"\\n     [class.pageTurn]=\\\"clickHandler && butt.loadBoardAction\\\"\\n     [class.ripple]=\\\"clickHandler\\\"\\n     [style.background-color]=\\\"butt.backgroundColor\\\"\\n     [style.border-color]=\\\"butt.borderColor\\\"\\n     mat-ripple [matRippleDisabled]=\\\"!clickHandler\\\">\\n  <div class=\\\"buttonImageDiv\\\" *ngIf=\\\"butt.getImage() as image\\\">\\n    <img class=\\\"buttonImage\\\" [src]=\\\"getDataURL()\\\"/>\\n  </div>\\n  <div class=\\\"buttonLabel\\\">\\n    {{butt.label}}\\n  </div>\\n</div>\\n\"","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Component, OnInit, Input, OnDestroy, HostBinding } from '@angular/core';\nimport { Button } from '../obfboard';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AppearanceConfig, ConfigService } from '../config.service';\n\n@Component({\n  selector: 'app-obf-button',\n  templateUrl: './obf-button.component.html',\n  styleUrls: ['./obf-button.component.css']\n})\nexport class ObfButtonComponent implements OnInit, OnDestroy {\n\n  @Input()\n  butt: Button;\n\n  @Input()\n  clickHandler: (Button) => void;\n\n  appearanceConfig: AppearanceConfig;\n\n  private url: string;\n\n  constructor(private domSanit: DomSanitizer, private config: ConfigService) {}\n\n  @HostBinding('attr.style')\n  public get valueAsStyle(): any {\n    return this.domSanit.bypassSecurityTrustStyle(`--borderWidth: ${this.appearanceConfig.borderThickness + 'px'}`);\n  }\n\n  ngOnInit() {\n    this.appearanceConfig = this.config.appearanceConfig;\n  }\n\n  getDataURL() {\n    this.url = URL.createObjectURL(this.butt.getImage().getDataBlob());\n    return this.domSanit.bypassSecurityTrustUrl(this.url);\n  }\n\n  ngOnDestroy() {\n    this.unload();\n  }\n\n  private unload() {\n    if (this.url) {\n      URL.revokeObjectURL(this.url);\n      this.url = undefined;\n    }\n  }\n\n  handleClick() {\n    if (this.clickHandler) {\n      this.clickHandler(this.butt);\n    }\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport {\n  IsString,\n  IsNotEmpty,\n  IsOptional,\n  IsDefined,\n  IsInt,\n  IsUrl,\n  ValidateNested,\n  validateSync,\n  ValidationError,\n} from 'class-validator';\nimport { ImageResolver } from './image-resolver';\nimport { SoundResolver } from './sound-resolver';\nimport { FatalOpenVoiceFactoryError, ErrorCodes } from './errors';\nimport { Check2DArray, OneOf } from './custom-validation';\n\nfunction stringify(value: any): string {\n  return value || value === 0 ? String(value) : undefined;\n}\n\nexport class Grid {\n\n  @IsDefined()\n  @IsInt()\n  rows: number;\n\n  @IsDefined()\n  @IsInt()\n  columns: number;\n\n  @Check2DArray('columns', 'rows')\n  order: string[][];\n\n  deserialize(input: any): Grid {\n    this.rows = input.rows;\n    this.columns = input.columns;\n    this.order = input.order.map(row => row.map(cell => stringify(cell)));\n    return this;\n  }\n}\n\nexport class LoadBoardAction {\n\n  @OneOf(['url', 'dataUrl', 'path'], { message: 'Load board should have one of dataUrl, url or path'})\n  id: string;\n\n  name: string;\n\n  @IsOptional()\n  @IsUrl()\n  url: string;\n\n  @IsOptional()\n  @IsUrl()\n  dataUrl: string;\n\n  path: string;\n\n  deserialize(input: any): LoadBoardAction {\n    this.id = input.id;\n    this.name = input.name;\n    this.url = input.url;\n    this.dataUrl = input.dataUrl || input.data_url;\n    this.path = input.path;\n\n    return this;\n  }\n}\n\nexport class Button {\n\n  @IsNotEmpty({ message: 'Button id must be specified'})\n  @IsString({ message: 'Button id must be a string'})\n  id: string;\n\n  @IsNotEmpty()\n  @IsString()\n  label: string;\n\n  @IsOptional()\n  @IsString()\n  vocalization: string;\n\n  @IsOptional()\n  @IsString()\n  imageId: string;\n\n  @IsOptional()\n  @IsString()\n  soundId: string;\n\n  backgroundColor: string;\n  borderColor: string;\n  actions: string[];\n  loadBoardAction: LoadBoardAction;\n\n  @IsDefined()\n  parent: OBFBoard;\n\n  deserialize(input: any, parent: OBFBoard): Button {\n    this.id = stringify(input.id);\n    this.label = input.label;\n    this.vocalization = input.vocalization;\n    this.imageId = stringify(input.imageId) || stringify(input.image_id);\n    this.soundId = stringify(input.soundId) || stringify(input.sound_id);\n    this.backgroundColor = input.backgroundColor || input.background_color;\n    this.borderColor = input.borderColor || input.border_color;\n    this.parent = parent;\n\n    if (input.actions && input.actions.length > 0) {\n      this.actions = input.actions;\n    } else {\n      this.actions = (input.action !== undefined && input.action !== '') ? [input.action] : [];\n    }\n\n    if (input.loadBoardAction || input.load_board) {\n      this.loadBoardAction = new LoadBoardAction().deserialize(input.loadBoardAction || input.load_board);\n    }\n\n    return this;\n  }\n\n  getVocalization(): string {\n    return this.vocalization || this.label;\n  }\n\n  getImage(): Image {\n    return this.imageId && this.parent.getImage(this.imageId);\n  }\n}\n\nexport class Image {\n\n  @OneOf(['url', 'data', 'path', 'symbol'], { message: 'Image with id \"$value\" must specifiy data, a url or a path' })\n  @IsString({ message: 'Image id must be a string' })\n  @IsNotEmpty({ message: 'Image id must be specified'})\n  id: string;\n\n  @IsOptional()\n  @IsInt()\n  width: number;\n\n  @IsOptional()\n  @IsInt()\n  height: number;\n\n  @IsOptional()\n  data: string;\n\n  @IsOptional()\n  @IsUrl()\n  url: string;\n\n  @IsOptional()\n  symbol: string;\n\n  @IsOptional()\n  @IsString()\n  path: string;\n\n  contentType: string;\n\n  @IsDefined()\n  parent: OBFBoard;\n\n  @IsOptional()\n  @IsString()\n  svgData: string;\n\n  deserialize(input: any, parent: OBFBoard): Image {\n    this.id = stringify(input.id);\n    this.width = input.width;\n    this.height = input.height;\n    this.data = input.data;\n    this.url = input.url;\n    this.path = input.path;\n    this.contentType = input.contentType || input.content_type;\n    this.parent = parent;\n    this.symbol = JSON.stringify(input.symbol);\n\n    return this;\n  }\n\n  getDataBlob(): Blob {\n    return this.parent.imageResolver.getImageData(this.path);\n  }\n}\n\nexport class Sound {\n\n  @IsNotEmpty({ message: 'Sound id must be specified'})\n  @IsString({ message: 'Sound id must be a string'})\n  @OneOf(['url', 'data', 'path'], { message: 'Sound with id \"$value\" must specifiy data, a url or a path' })\n  id: string;\n\n  @IsOptional()\n  data: string;\n\n  @IsOptional()\n  @IsUrl()\n  url: string;\n\n  @IsOptional()\n  path: string;\n\n  contentType: string;\n\n  duration: number;\n\n  @IsDefined()\n  parent: OBFBoard;\n\n  deserialize(input: any, parent: OBFBoard): Sound {\n    this.id = stringify(input.id);\n    this.data = input.data;\n    this.url = input.url;\n    this.path = input.path;\n    this.contentType = input.contentType || input.content_type;\n    this.duration = input.duration;\n    this.parent = parent;\n\n    return this;\n  }\n\n  getSource(): string {\n    if (this.path && this.parent.soundResolver) {\n      const soundData = this.parent.soundResolver.getSoundData(this.path);\n      return `data:${this.contentType};base64,${soundData}`;\n    }\n    return this.data || this.url;\n  }\n}\n\nexport class OBFBoard {\n\n  format: string;\n\n  @IsNotEmpty({ message: 'Board id must be specified'})\n  @IsString({ message: 'Board id must be a string'})\n  id: string;\n\n  locale: string;\n\n  name: string;\n\n  @IsOptional()\n  @IsString()\n  descriptionHtml: string;\n\n  @ValidateNested()\n  @IsDefined()\n  grid: Grid;\n\n  @ValidateNested({\n    each: true\n  })\n  @IsDefined()\n  buttons: Button[];\n\n  @ValidateNested({\n    each: true\n  })\n  images: Image[];\n\n  @ValidateNested({\n    each: true\n  })\n  sounds: Sound[];\n\n  imageResolver: ImageResolver;\n\n  soundResolver: SoundResolver;\n\n  deserialize(input: any): OBFBoard {\n    this.format = input.format;\n    this.id = stringify(input.id);\n    this.locale = input.locale;\n    this.name = input.name;\n    this.descriptionHtml = input.descriptionHtml || input.description_html;\n    this.grid = new Grid().deserialize(input.grid);\n    this.buttons = input.buttons.map(button => new Button().deserialize(button, this));\n    this.images = input.images.map(image => new Image().deserialize(image, this));\n    this.sounds = input.sounds.map(sound => new Sound().deserialize(sound, this));\n\n    const errors = validateSync(this);\n    if (errors && errors.length > 0) {\n      const all_errors: string[] = [];\n      errors.forEach(err => all_errors.push(...this.messagesFromError(err)));\n      console.log(all_errors.join('\\n'));\n      throw new FatalOpenVoiceFactoryError(ErrorCodes.OBF_VALIDATION, all_errors.join('\\n'));\n    }\n\n    // filter out images we can't display AFTER collecting error messages\n    this.images = this.images.filter(image => image.data || image.path || image.url);\n\n    return this;\n  }\n\n  private messagesFromError(error: ValidationError): string[] {\n    const ret: string[] = [];\n    console.log(error);\n    if (error.constraints) {\n      ret.push(...Object.values(error.constraints));\n    }\n    if (error.children) {\n      error.children.forEach(err => ret.push(...this.messagesFromError(err)));\n    }\n    return ret;\n  }\n\n  setImageResolver(imageResolver: ImageResolver) {\n    this.imageResolver = imageResolver;\n  }\n\n  setSoundResolver(soundResolver: SoundResolver) {\n    this.soundResolver = soundResolver;\n  }\n\n  getButton(id: string): Button {\n    return id === null ? null : this.buttons.find(button => button.id === id);\n  }\n\n  getImage(id: string): Image {\n    return id === null ? null : this.images.find(image => image.id === id);\n  }\n\n  getSound(id: string): Sound {\n    return id === null ? null : this.sounds.find(sound => sound.id === id);\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-obfpage',\n  template: `<div class=\"obfpage\"><div class=\"inner\"><ng-content></ng-content></div></div>`,\n  styles: [`\n    .obfpage {\n      width: 100%;\n      height: 100%;\n      background-color: lightsteelblue;\n      position: absolute;\n    }\n    .inner {\n      margin: 20px;\n    }\n  `]\n})\nexport class OBFPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, from, of } from 'rxjs';\nimport { flatMap, catchError, first } from 'rxjs/operators';\nimport { ConfigService } from './config.service';\nimport { UrlUtils } from './url-utils';\nimport { OBZBoardSet } from './obzboard-set';\nimport { OBFBoard } from './obfboard';\n\nimport * as JSZip from 'jszip';\nimport { FatalOpenVoiceFactoryError, ErrorCodes } from './errors';\nimport { BoardCacheService } from './board-cache.service';\nimport { ProgressService } from './progress.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObzService {\n\n  constructor(\n    private http: HttpClient,\n    private config: ConfigService,\n    private boardCache: BoardCacheService,\n    private progress: ProgressService\n  ) { }\n\n  getBoardSet(): Observable<OBZBoardSet> {\n    return this.loadBoardSet(this.config.boardURL);\n  }\n\n  public loadBoardSet(boardURL: string): Observable<OBZBoardSet> {\n    return this.boardCache.retrieve().pipe(catchError(err => this.loadFromNetwork(boardURL)));\n  }\n\n  private loadFromNetwork(boardURL: string): Observable<OBZBoardSet> {\n\n    this.progress.progress(ProgressService.message('Downloading'));\n    this.log(`Loading ${boardURL} from internet`);\n\n    const urlSlug = new UrlUtils().getSlug(boardURL);\n    this.log(`Parsed url ${urlSlug}`);\n\n    // Decide if we're loading an obz or an obf\n    if (urlSlug.toLowerCase().endsWith('.obf')) {\n      return this.loadOBFFile(boardURL);\n    } else {\n      // assume obz by default. For now.\n      return this.loadOBZFile(boardURL);\n    }\n  }\n\n  private cacheBoardSet = (boardURL: string, boardSet: OBZBoardSet): Observable<OBZBoardSet> => {\n    this.progress.progress(ProgressService.message('Parsing'));\n    this.log(`Blobifying ${boardURL}`);\n    return boardSet.blobify(this.http, this.progress).pipe(\n      flatMap(blobified => {\n        this.progress.progress(ProgressService.message('Caching'));\n        this.log(`Caching ${boardURL}`);\n        return this.boardCache.save(blobified);\n      }),\n      first(),\n      catchError(error => {\n        console.error(`Cache of ${boardURL} failed`, error);\n        // may as well carry on though as we have loaded the board\n        return of(boardSet);\n      })\n    );\n  }\n\n  private loadOBFFile(boardURL: string): Observable<OBZBoardSet> {\n    return this.http.get<OBFBoard>(boardURL).pipe(\n      flatMap(page => {\n        const boardSet = new OBZBoardSet();\n        boardSet.rootBoardKey = 'root';\n        boardSet.setBoard('root', new OBFBoard().deserialize(page));\n        return this.cacheBoardSet(boardURL, boardSet);\n      }),\n      catchError(err => throwError(\n        new FatalOpenVoiceFactoryError(ErrorCodes.OBF_LOAD_ERROR, `Failed to load obf from ${boardURL}`, err)\n      )\n    ));\n  }\n\n  private getOBZFile(boardURL: string): Observable<Blob> {\n    return this.http.get(boardURL, { responseType: 'blob' }).pipe(\n      catchError((error: HttpErrorResponse) => throwError(\n        new FatalOpenVoiceFactoryError(ErrorCodes.OBZ_DOWNLOAD_ERROR, `Failed to download file ${boardURL}: ${error.message}`)\n      ))\n    );\n  }\n\n  private loadOBZFile(boardURL: string): Observable<OBZBoardSet> {\n\n    return this.getOBZFile(boardURL).pipe(\n      flatMap(blob => {\n        return this.parseOBZFile(blob).pipe(\n          catchError(error => throwError(\n            new FatalOpenVoiceFactoryError(ErrorCodes.OBZ_PARSE_ERROR, `Could not parse ${boardURL} as a zip file`, error)\n          ))\n        );\n      }),\n      flatMap(boardSet => this.cacheBoardSet(boardURL, boardSet))\n    );\n  }\n\n  parseOBZFile(blob: Blob): Observable<OBZBoardSet> {\n    const parseBoard = this.parseBoard;\n    const parseImage = this.parseImage;\n    const parseSound = this.parseSound;\n    const validate   = this.validate;\n    const zipper = new JSZip();\n\n    return from(zipper.loadAsync(blob).then(function(zip) {\n      const manifestFile = zip.file('manifest.json');\n      if (!manifestFile) {\n        throw new FatalOpenVoiceFactoryError(ErrorCodes.MISSING_MANIFEST, 'No manifest file!');\n      }\n      return manifestFile.async('text').then(function (manifest: string) {\n\n        let manifestJSON = null;\n        try {\n          manifestJSON = JSON.parse(manifest);\n        } catch (error) {\n          throw new FatalOpenVoiceFactoryError(ErrorCodes.MANIFEST_JSON_ERROR, 'manifest.json is not json', error);\n        }\n        const boardSet = new OBZBoardSet();\n        boardSet.rootBoardKey = manifestJSON.root;\n\n        let promises = [];\n        promises = promises.concat(Object.values(manifestJSON.paths.boards).map(board => parseBoard(zip, board.toString(), boardSet)));\n\n        if (manifestJSON.paths.images) {\n          promises = promises.concat(Object.values(manifestJSON.paths.images).map(image => parseImage(zip, image.toString(), boardSet)));\n        }\n\n        if (manifestJSON.paths.sounds) {\n          promises = promises.concat(Object.values(manifestJSON.paths.sounds).map(sound => parseSound(zip, sound.toString(), boardSet)));\n        }\n\n        return Promise.all(promises).then(() => validate(boardSet));\n      }, function (fail) {\n        // error loading manifest\n        throw new FatalOpenVoiceFactoryError(ErrorCodes.MANIFEST_LOAD_ERROR, 'Could not load manifest.json', fail);\n      });\n    }, function (fail) {\n      // error loading zip file\n      throw new FatalOpenVoiceFactoryError(ErrorCodes.ZIP_PARSE_ERROR, 'Could not parse zip file', fail);\n    }));\n  }\n\n  private validate(boardSet: OBZBoardSet): OBZBoardSet {\n\n    // test that root board is in board set\n    const rootBoard = boardSet.getBoard(boardSet.rootBoardKey);\n    if (!rootBoard) {\n      throw new FatalOpenVoiceFactoryError(\n        ErrorCodes.INVALID_ROOT,\n        `OBZ specifies a root of '${boardSet.rootBoardKey}' but this path is not present`\n      );\n    }\n\n    // TODO: validate all paths and references in board set\n    return boardSet;\n  }\n\n  private parseImage = (zip, image: string, boardSet: OBZBoardSet): Promise<void> => {\n    const imageFile = zip.file(image);\n    if (!imageFile) {\n      throw new FatalOpenVoiceFactoryError(ErrorCodes.IMAGE_NOT_THERE, `Image ${image} is not present in obz`);\n    }\n    const imagePromise = imageFile.async('blob').then(function (contents) {\n      boardSet.setImage(image, contents);\n    }).catch(error => {\n      // error loading image file\n      throw new FatalOpenVoiceFactoryError(ErrorCodes.IMAGE_LOAD_ERROR, `Error loading image file ${image}`, error);\n    });\n\n    return imagePromise;\n  }\n\n  private parseSound = (zip, sound: string, boardSet: OBZBoardSet): Promise<void> => {\n    const soundFile = zip.file(sound);\n    if (!soundFile) {\n      throw new FatalOpenVoiceFactoryError(ErrorCodes.SOUND_NOT_THERE, `Sound ${sound} is not present in obz`);\n    }\n    const soundPromise = soundFile.async('base64').then(function (contents) {\n      boardSet.setSound(sound, contents);\n    }).catch(error => {\n      // error loading sound file\n      throw new FatalOpenVoiceFactoryError(ErrorCodes.SOUND_LOAD_ERROR, `Error loading sound file ${sound}`, error);\n    });\n\n    return soundPromise;\n  }\n\n  private parseBoard = (zip, board: string, boardSet: OBZBoardSet): Promise<void> => {\n    const boardFile = zip.file(board);\n    if (!boardFile) {\n      throw new FatalOpenVoiceFactoryError(ErrorCodes.BOARD_NOT_THERE, `Board ${board} is not present in obz`);\n    }\n    const boardPromise = boardFile.async('text').then(function (contents) {\n      boardSet.setBoard(board, new OBFBoard().deserialize(JSON.parse(contents)));\n    }).catch(error => {\n      // error loading board\n      throw new FatalOpenVoiceFactoryError(ErrorCodes.BOARD_PARSE_ERROR, `Error parsing board ${board}`, error);\n    });\n\n    return boardPromise;\n  }\n\n  private log(message: string) {\n    console.log(`ObzService: ${message}`);\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { OBFBoard } from './obfboard';\nimport { ImageResolver } from './image-resolver';\nimport { SoundResolver } from './sound-resolver';\nimport { HttpClient } from '@angular/common/http';\nimport { tap, map } from 'rxjs/operators';\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { ProgressService } from './progress.service';\n\nexport class OBZBoardSet implements ImageResolver, SoundResolver {\n\n  private boards: Map<string, OBFBoard> = new Map();\n  private images: Map<string, Blob> = new Map();\n  private sounds: Map<string, string> = new Map();\n\n  rootBoardKey: string;\n\n  public getBoard(boardKey: string): OBFBoard {\n    return this.boards.get(boardKey);\n  }\n\n  public setBoard(boardKey: string, board: OBFBoard) {\n    this.boards.set(boardKey, board);\n    board.setImageResolver(this);\n    board.setSoundResolver(this);\n  }\n\n  public setImage(imageKey: string, imageData: Blob) {\n    this.images.set(imageKey, imageData);\n  }\n\n  public setSound(soundKey: string, soundData: string) {\n    this.sounds.set(soundKey, soundData);\n  }\n\n  public getImageData(imagePath: string): Blob {\n    return this.images.get(imagePath);\n  }\n\n  public getSoundData(soundPath: string): string {\n    return this.sounds.get(soundPath);\n  }\n\n  public blobify(httpClient: HttpClient, progress: ProgressService): Observable<OBZBoardSet> {\n\n    // TODO: go through boards and load other boards from board actions (until there are no more new ones!)\n\n    // TODO: error handling might be nice...\n\n    // go through all url & data images & sounds and blobify into maps\n    progress.progress(ProgressService.message('Pre-caching images'));\n    return this.blobifyImages(httpClient).pipe(\n      map(imageResult => this)\n    );\n\n    // TODO: sounds\n  }\n\n  private blobifyImages(httpClient: HttpClient): Observable<boolean> {\n\n    const observables = [];\n\n    this.boards.forEach(board => {\n      board.images.forEach(image => {\n        // if image already has a path, then don't worry\n        if (!image.path) {\n          // try data first\n          if (image.data && image.contentType) {\n            const key = `data:${image.id}`;\n            // TODO: we could use the content type from here that we're stripping off\n            const data = image.data.substr(image.data.indexOf(',') + 1);\n            this.setImage(key, this.base64ToBlob(data, image.contentType));\n            // set path to key so render code will look up blob in images\n            image.path = key;\n            // remove data as we don't need to cache it too\n            image.data = null;\n          } else if (image.url) {\n            // load url into blob\n            console.log(`Loading image ${image.url}`);\n            observables.push(httpClient.get(image.url, { responseType: 'blob' }).pipe(\n              tap(blob => {\n                const key = `url:${image.id}`;\n                this.setImage(key, blob);\n                image.path = key;\n                image.url = null;\n              })\n            ));\n          }\n        }\n      });\n    });\n\n    return observables.length > 0 ? forkJoin(...observables) : of(true);\n  }\n\n  private base64ToBlob(data: string, type: string): Blob {\n    const byteArray = new Uint8Array(Array.from(atob(data)).map(char => char.charCodeAt(0)));\n    return new Blob([byteArray], { type: type });\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\nexport class ProgressObject {\n  message: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProgressService {\n\n  private observer: Observer<ProgressObject>;\n\n  static message(msg: string): ProgressObject {\n    const ret = new ProgressObject();\n    ret.message = msg;\n    return ret;\n  }\n\n  constructor() {}\n\n  getProgress = (): Observable<ProgressObject> => {\n    return new Observable(this.addObserver);\n  }\n\n  private addObserver = (observer: Observer<ProgressObject>) => {\n    this.observer = observer;\n  }\n\n  progress = (progObj: ProgressObject) => {\n    if (this.observer) {\n      this.observer.next(progObj);\n    }\n  }\n}\n","module.exports = \"/* ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: */\\n.maxSpace {\\n  width: 100%;\\n  text-align: center;\\n}\\n.progressMessage {\\n  font-size: small;\\n}\\n.spinner {\\n  display: inline-block;\\n  position: relative;\\n  width: 64px;\\n  height: 64px;\\n}\\n.spinner div {\\n  position: absolute;\\n  top: 27px;\\n  width: 11px;\\n  height: 11px;\\n  border-radius: 50%;\\n  background: green;\\n  -webkit-animation-timing-function: cubic-bezier(0, 1, 1, 0);\\n          animation-timing-function: cubic-bezier(0, 1, 1, 0);\\n}\\n.spinner div:nth-child(1) {\\n  left: 6px;\\n  -webkit-animation: spinner1 0.6s infinite;\\n          animation: spinner1 0.6s infinite;\\n}\\n.spinner div:nth-child(2) {\\n  left: 6px;\\n  -webkit-animation: spinner2 0.6s infinite;\\n          animation: spinner2 0.6s infinite;\\n}\\n.spinner div:nth-child(3) {\\n  left: 26px;\\n  -webkit-animation: spinner2 0.6s infinite;\\n          animation: spinner2 0.6s infinite;\\n}\\n.spinner div:nth-child(4) {\\n  left: 45px;\\n  -webkit-animation: spinner3 0.6s infinite;\\n          animation: spinner3 0.6s infinite;\\n}\\n@-webkit-keyframes spinner1 {\\n  0% {\\n    -webkit-transform: scale(0);\\n            transform: scale(0);\\n  }\\n  100% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n  }\\n}\\n@keyframes spinner1 {\\n  0% {\\n    -webkit-transform: scale(0);\\n            transform: scale(0);\\n  }\\n  100% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n  }\\n}\\n@-webkit-keyframes spinner2 {\\n  0% {\\n    -webkit-transform: translate(0, 0);\\n            transform: translate(0, 0);\\n  }\\n  100% {\\n    -webkit-transform: translate(19px, 0);\\n            transform: translate(19px, 0);\\n  }\\n}\\n@keyframes spinner2 {\\n  0% {\\n    -webkit-transform: translate(0, 0);\\n            transform: translate(0, 0);\\n  }\\n  100% {\\n    -webkit-transform: translate(19px, 0);\\n            transform: translate(19px, 0);\\n  }\\n}\\n@-webkit-keyframes spinner3 {\\n  0% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n  }\\n  100% {\\n    -webkit-transform: scale(0);\\n            transform: scale(0);\\n  }\\n}\\n@keyframes spinner3 {\\n  0% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n  }\\n  100% {\\n    -webkit-transform: scale(0);\\n            transform: scale(0);\\n  }\\n}\\n\"","module.exports = \"<!-- ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: -->\\n<div class=\\\"maxSpace\\\" *ngIf=\\\"currentProgress\\\">\\n  <div class=\\\"progressContainer\\\">\\n    <div class=\\\"spinner\\\">\\n      <div></div>\\n      <div></div>\\n      <div></div>\\n      <div></div>\\n    </div>\\n    <div class=\\\"progressMessage\\\">{{currentProgress.message}}</div>\\n  </div>\\n</div>\\n\"","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ProgressObject, ProgressService } from '../progress.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-progress',\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.css']\n})\nexport class ProgressComponent implements OnInit, OnDestroy {\n\n  currentProgress: ProgressObject = ProgressService.message('Loading');\n  private subscription: Subscription;\n\n  constructor(private progressSerivce: ProgressService) { }\n\n  ngOnInit() {\n    this.subscription = this.progressSerivce.getProgress().subscribe(this.updateProgress);\n  }\n\n  private updateProgress = (progress: ProgressObject) => {\n    this.currentProgress = progress;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Injectable } from '@angular/core';\nimport { ConfigService } from './config.service';\nimport { Observable, Subscriber, Subscription } from 'rxjs';\n\nexport class Scannable {\n  private _priority: number;\n  private _type: string;\n\n  constructor(priority: number, type: string) {\n    this._priority = priority;\n    this._type = type;\n  }\n\n  get priority(): number {\n    return this._priority;\n  }\n\n  set priority(priority: number) {\n    this._priority = priority;\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  set type(type: string) {\n    this._type = type;\n  }\n\n  hasChildren(): boolean {\n    return false;\n  }\n}\n\nexport class ScannableCollection extends Scannable {\n  private children: Scannable[] = [];\n\n  hasChildren(): boolean {\n    return this.children.length > 0;\n  }\n\n  getChildren(): Scannable[] {\n    return this.children;\n  }\n\n  getChild(index: number): Scannable {\n    return this.children[index];\n  }\n\n  addChild(child: Scannable) {\n    this.children.push(child);\n    this.sortChildren();\n  }\n\n  addChildren(newChildren: Scannable[]) {\n    this.children.push(...newChildren);\n    this.sortChildren();\n  }\n\n  removeChildren(oldChildren: Scannable[]) {\n    oldChildren.forEach(scannable => {\n      const index = this.children.indexOf(scannable);\n      if (index >= 0) {\n        this.children.splice(index, 1);\n      }\n    });\n  }\n\n  sortChildren() {\n    this.children.sort(this._sortScannables);\n  }\n\n  _sortScannables(a: Scannable, b: Scannable): number {\n    return a.priority - b.priority;\n  }\n}\n\nexport class ScanningModel {\n  currentHighlight: Scannable;\n  currentSelection: Scannable;\n}\n\nexport interface ScannableCollectionProvider extends Subscriber<ScanningModel> {\n  getScannableCollections(): ScannableCollection[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScanningService {\n\n  private topLevelScannables: ScannableCollection;\n  private currentCollection: ScannableCollection;\n  private scanningModel: ScanningModel;\n  private currentSelectedIndex = 0;\n  private observers: ScannableCollectionProvider[];\n  private intervalId;\n\n  constructor(private configService: ConfigService) {\n    this.topLevelScannables = new ScannableCollection(0, '');\n    this.currentCollection = this.topLevelScannables;\n    this.scanningModel = new ScanningModel();\n    this.observers = [];\n  }\n\n  getScanningModel(): Observable<ScanningModel> {\n    return new Observable<ScanningModel>(this.registerScannable);\n  }\n\n  registerScannable = (observer: ScannableCollectionProvider): Subscription => {\n    this.observers.push(observer);\n\n    this.topLevelScannables.addChildren(observer.getScannableCollections());\n\n    if (this.configService.scanningConfig.enabled) {\n      this.startScanning();\n    }\n\n    return new Subscription(() => this._unsubscribe(observer));\n  }\n\n  _unsubscribe(observer: ScannableCollectionProvider) {\n    if (this.observers.includes(observer)) {\n      this.observers.splice(this.observers.indexOf(observer), 1);\n    }\n    this.topLevelScannables.removeChildren(observer.getScannableCollections());\n\n    this.currentCollection = this.topLevelScannables;\n\n    if (this.observers.length === 0) {\n      this.stopScanning();\n      this.scanningModel = new ScanningModel();\n    }\n  }\n\n  handleInteraction() {\n    if (this.scanningModel.currentHighlight) {\n      this.updateSelected();\n\n      if (this.scanningModel.currentSelection.hasChildren()) {\n        this.currentCollection = <ScannableCollection> this.scanningModel.currentSelection;\n      } else {\n        this.currentCollection = this.topLevelScannables;\n      }\n    }\n  }\n\n  private startScanning() {\n    if (this.intervalId === undefined && this.observers.length >= 1) {\n      document.onkeydown = this.handleInteraction.bind(this);\n      this.currentSelectedIndex = 0;\n      this.intervalId = setInterval(this.updateHighlighted, this.configService.scanningConfig.time);\n    }\n  }\n\n  private stopScanning() {\n    document.onkeydown = undefined;\n    clearInterval(this.intervalId);\n    this.intervalId = undefined;\n  }\n\n  private updateHighlighted = () => {\n    if (this.currentSelectedIndex >= this.currentCollection.getChildren().length) {\n      this.currentSelectedIndex = 0;\n    }\n\n    this.scanningModel.currentHighlight = this.currentCollection.getChild(this.currentSelectedIndex++);\n    this.notifyObservers();\n  }\n\n  private updateSelected = () => {\n    this.stopScanning();\n    const current = this.scanningModel.currentHighlight;\n    this.scanningModel.currentSelection = current;\n    this.scanningModel.currentHighlight = undefined;\n    this.notifyObservers();\n\n    // stay on the selection for one [time] then clear selection and restart scanning\n    setTimeout(() => {\n      this.scanningModel.currentSelection = undefined;\n      this.notifyObservers();\n      this.startScanning();\n    }, this.configService.scanningConfig.time);\n  }\n\n  private notifyObservers() {\n    this.observers.forEach(observer => observer.next(this.scanningModel));\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Injectable } from '@angular/core';\nimport { Button, Image, OBFBoard, LoadBoardAction } from './obfboard';\nimport { Observable, Observer } from 'rxjs';\nimport { ConfigService } from './config.service';\n\nexport class ButtonFacade extends Button {\n\n  private button: Button;\n  private appendages: string[] = [];\n\n  constructor(button: Button) {\n    super();\n    this.button = button;\n  }\n\n  append(appendage: string) {\n    this.appendages.push(appendage);\n  }\n\n  getVocalization(): string {\n    return this.vocalization || this.label;\n  }\n\n  getImage(): Image {\n    return this.button.getImage();\n  }\n\n  private augment(initial: string): string {\n    return [initial].concat(this.appendages).join('');\n  }\n\n  get id(): string {\n    return this.button.id;\n  }\n\n  get label(): string {\n    return this.augment(this.button.label);\n  }\n\n  get vocalization(): string {\n    return this.button.vocalization ? this.augment(this.button.vocalization) : this.button.vocalization;\n  }\n\n  get imageId(): string {\n    return this.button.imageId;\n  }\n\n  get soundId(): string {\n    return this.button.soundId;\n  }\n\n  get backgroundColor(): string {\n    return this.button.backgroundColor;\n  }\n\n  get borderColor(): string {\n    return this.button.borderColor;\n  }\n\n  get actions(): string[] {\n    return this.button.actions;\n  }\n\n  get loadBoardAction(): LoadBoardAction {\n    return this.button.loadBoardAction;\n  }\n\n  get parent(): OBFBoard {\n    return this.button.parent;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpeechbarService {\n\n  private buttons: ButtonFacade[] = [];\n  private speechSynthesizer: SpeechSynthesis = (<any>window).speechSynthesis;\n  private listener: Observer<boolean>;\n  private buttonObserver: Observer<Button[]>;\n  private spaceJustPressed = false;\n  private userVoice: SpeechSynthesisVoice;\n\n  constructor(private configService: ConfigService) {\n    this.configService.voiceConfig$.subscribe(\n      voiceConfig => {\n        if (voiceConfig.userVoice) {\n          this.userVoice = this.speechSynthesizer.getVoices().find(voice => voice.voiceURI === voiceConfig.userVoice);\n        }\n      }\n    );\n  }\n\n  addButton(button: Button) {\n    this.spaceJustPressed = false;\n    this.buttons.push(new ButtonFacade(button));\n    this.notifyButtonObserver();\n  }\n\n  clear() {\n    this.buttons = [];\n    this.notifyButtonObserver();\n  }\n\n  backspace() {\n    this.buttons.pop();\n    this.notifyButtonObserver();\n  }\n\n  speak() {\n    // don't queue up multiple speak actions\n    if (!this.speechSynthesizer.speaking) {\n      const msg = this.createUtterance();\n      msg.text = this.buildSentence(this.buttons.map(button => button.getVocalization()));\n\n      msg.onstart = () => this.listener.next(true);\n      msg.onend = () => this.listener.next(false);\n      this.speechSynthesizer.speak(msg);\n    }\n  }\n\n  buildSentence(vocalizations: string[]): string {\n    if (vocalizations.length === 0) {\n      return '';\n    }\n    const ret = vocalizations.join(' ');\n    const lastChar = ret[ret.length - 1];\n    const endsWithPunc = lastChar === '?' || lastChar === '!' || lastChar === '.';\n    return endsWithPunc ? ret : ret + ' .';\n  }\n\n  sayButton(button: Button) {\n    // we do want to queue these up, so no speaking check\n    // we also want the speak button to stay enabled for queing up the actual message, so no listener updates\n    const msg = this.createUtterance();\n    msg.text = this.buildSentence([button.getVocalization()]);\n    this.speechSynthesizer.speak(msg);\n  }\n\n  private createUtterance(): any {\n    const msg = new SpeechSynthesisUtterance();\n\n    if (this.userVoice) {\n      msg.voice = this.userVoice;\n    }\n\n    return msg;\n  }\n\n  appendButton(button: Button, action: string) {\n    if (this.buttons.length === 0 || this.spaceJustPressed) {\n      this.spaceJustPressed = false;\n      const appendBut = new Button();\n      appendBut.label = action.substr(1);\n      this.buttons.push(new ButtonFacade(appendBut));\n      this.notifyButtonObserver();\n    } else {\n      this.spaceJustPressed = false;\n      this.buttons[this.buttons.length - 1].append(action.substr(1));\n      this.notifyButtonObserver();\n    }\n  }\n\n  space() {\n    this.spaceJustPressed = true;\n  }\n\n  private notifyButtonObserver() {\n    this.buttonObserver.next(this.buttons);\n  }\n\n  getButtons(): Observable<Button[]> {\n    return new Observable<Button[]>(this.addButtonObserver);\n  }\n\n  getSpeaking(): Observable<boolean> {\n    return new Observable<boolean>(this.addListener);\n  }\n\n  addButtonObserver = (observer: Observer<Button[]>) => {\n    this.buttonObserver = observer;\n    this.buttonObserver.next(this.buttons);\n  }\n\n  addListener = (listener: Observer<boolean>) => {\n    this.listener = listener;\n    this.listener.next(this.speechSynthesizer && this.speechSynthesizer.speaking);\n  }\n}\n","module.exports = \"/* ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: */\\n.speechbarContainer {\\n  display: flex;\\n  height: 100%;\\n}\\n.speechbar {\\n  display: flex;\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n  flex-grow: 1;\\n  padding: 0;\\n}\\n.speechbarTextItem {\\n  flex-shrink: 0;\\n}\\n.speechbarButtonItem {\\n  min-height: 33%;\\n  max-width: 20%;\\n  min-width: 10%;\\n}\\n.speechbarText {\\n  padding: 12px;\\n  height: 100%;\\n  font-size: x-large;\\n}\\n.stackedButtonContainer {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.stackedButton {\\n  flex-grow: 1;\\n  padding-top: 30%;\\n  background: var(--button-image) no-repeat 50% 35%;\\n  background-size: auto 25%;\\n}\\n.scanHighlight {\\n  position: relative;\\n}\\n.scanHighlight:after {\\n  border: greenyellow solid 5px;\\n  content: \\\" \\\";\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n.scanSelect {\\n  position: relative;\\n}\\n.scanSelect:after {\\n  border: blue solid 5px;\\n  content: \\\" \\\";\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n\"","module.exports = \"<!-- ::START::LICENCE::\\nCopyright eQualityTime ©2018\\nThis file is part of OVFPlayer.\\nOVFPlayer is free software: you can redistribute it and/or modify\\nit under the terms of the GNU General Public License as published by\\nthe Free Software Foundation, either version 3 of the License, or\\n(at your option) any later version.\\nOVFPlayer is distributed in the hope that it will be useful,\\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\nGNU General Public License for more details.\\nYou should have received a copy of the GNU General Public License\\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\\n::END::LICENCE:: -->\\n<div class=\\\"speechbarContainer\\\"\\n    [class.scanHighlight]=\\\"buttonRow.isHighlighted()\\\"\\n    [class.scanSelect]=\\\"buttonRow.isSelected()\\\">\\n  <div class=\\\"stackedButtonContainer\\\">\\n    <button class=\\\"stackedButton\\\" mat-raised-button [appInteractionEventHandler]=\\\"buttonRow.speak.handler\\\" [disabled]=\\\"speaking\\\"\\n            [class.scanHighlight]=\\\"buttonRow.speak.isHighlighted()\\\"\\n            [class.scanSelect]=\\\"buttonRow.speak.isSelected()\\\"\\n            style=\\\"--button-image: url('/assets/images/speechbubble.png')\\\"\\n            *ngIf=\\\"buttonRow.speak\\\">{{buttonRow.speak.label}}</button>\\n    <button class=\\\"stackedButton\\\" mat-raised-button [appInteractionEventHandler]=\\\"buttonRow.home.handler\\\"\\n            [class.scanHighlight]=\\\"buttonRow.home.isHighlighted()\\\"\\n            [class.scanSelect]=\\\"buttonRow.home.isSelected()\\\"\\n            style=\\\"--button-image: url('/assets/images/home.png')\\\"\\n            *ngIf=\\\"buttonRow.home\\\">{{buttonRow.home.label}}</button>\\n  </div>\\n\\n  <mat-card class=\\\"speechbar\\\" *ngIf=\\\"showIconsInSpeechbar; else vocalization\\\"\\n            [appInteractionEventHandler]=\\\"buttonRow.speechbar && buttonRow.speechbar.handler\\\"\\n            [class.scanHighlight]=\\\"buttonRow.speechbar && buttonRow.speechbar.isHighlighted()\\\"\\n            [class.scanSelect]=\\\"buttonRow.speechbar && buttonRow.speechbar.isSelected()\\\">\\n    <div class=\\\"speechbarButtonItem\\\" *ngFor=\\\"let butt of buttons\\\">\\n      <app-obf-button [butt]=\\\"butt\\\"></app-obf-button>\\n    </div>\\n  </mat-card>\\n  <ng-template #vocalization>\\n    <mat-card class=\\\"speechbar\\\" [appInteractionEventHandler]=\\\"buttonRow.speechbar && buttonRow.speechbar.handler\\\"\\n              [class.scanHighlight]=\\\"buttonRow.speechbar && buttonRow.speechbar.isHighlighted()\\\"\\n              [class.scanSelect]=\\\"buttonRow.speechbar && buttonRow.speechbar.isSelected()\\\">\\n      <div class=\\\"speechbarTextItem\\\" *ngFor=\\\"let butt of buttons\\\">\\n        <mat-card class=\\\"speechbarText\\\">\\n          {{butt.getVocalization()}}\\n        </mat-card>\\n      </div>\\n    </mat-card>\\n  </ng-template>\\n\\n  <div class=\\\"stackedButtonContainer\\\">\\n    <button class=\\\"stackedButton\\\" mat-raised-button [appInteractionEventHandler]=\\\"buttonRow.backspace.handler\\\"\\n            [class.scanHighlight]=\\\"buttonRow.backspace.isHighlighted()\\\"\\n            [class.scanSelect]=\\\"buttonRow.backspace.isSelected()\\\"\\n            style=\\\"--button-image: url('/assets/images/left.png')\\\"\\n            *ngIf=\\\"buttonRow.backspace\\\">{{buttonRow.backspace.label}}</button>\\n    <button class=\\\"stackedButton\\\" mat-raised-button [appInteractionEventHandler]=\\\"buttonRow.clear.handler\\\"\\n            [class.scanHighlight]=\\\"buttonRow.clear.isHighlighted()\\\"\\n            [class.scanSelect]=\\\"buttonRow.clear.isSelected()\\\"\\n            style=\\\"--button-image: url('/assets/images/erase.png')\\\"\\n            *ngIf=\\\"buttonRow.clear\\\">{{buttonRow.clear.label}}</button>\\n  </div>\\n</div>\\n\"","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { Component, OnInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { ConfigService, ButtonDisplayConfig } from '../config.service';\nimport { SpeechbarService } from '../speechbar.service';\nimport { Subscription, Subscriber } from 'rxjs';\nimport { BoardService } from '../board.service';\nimport { Button } from '../obfboard';\nimport { ScanningService, ScanningModel, Scannable, ScannableCollection, ScannableCollectionProvider } from '../scanning.service';\n\nclass ScannableButton extends Scannable {\n  static TYPE = 'SpeechbarButton';\n  private _label: string;\n  private _handler: () => void;\n  private speechbarComponent: SpeechbarComponent;\n\n  constructor(label: string, handler: () => void, priority: number, speechbarComponent: SpeechbarComponent) {\n    super(priority, ScannableButton.TYPE);\n    this._label = label;\n    this._handler = handler;\n    this.speechbarComponent = speechbarComponent;\n  }\n\n  get label(): string {\n    return this._label;\n  }\n\n  get handler(): () => void {\n    return this._handler;\n  }\n\n  set label(label: string) {\n    this._label = label;\n  }\n\n  set handler(handler: () => void) {\n    this._handler = handler;\n  }\n\n  isHighlighted(): boolean {\n    return this.speechbarComponent.scanningModel && this.speechbarComponent.scanningModel.currentHighlight === this;\n  }\n\n  isSelected(): boolean {\n    return this.speechbarComponent.scanningModel && this.speechbarComponent.scanningModel.currentSelection === this;\n  }\n}\n\nclass ScannableSpeechbarRow extends ScannableCollection {\n  static TYPE = 'SpeechbarRow';\n  speak: ScannableButton;\n  home: ScannableButton;\n  speechbar: ScannableButton;\n  backspace: ScannableButton;\n  clear: ScannableButton;\n  private speechbarComponent: SpeechbarComponent;\n\n  constructor(displayedButtons: ButtonDisplayConfig, speakOnSpeechbarClick: boolean, speechbarComponent: SpeechbarComponent) {\n    super(0, ScannableSpeechbarRow.TYPE);\n    this.speechbarComponent = speechbarComponent;\n\n    if (displayedButtons.showSpeakButton) {\n      this.speak = new ScannableButton('Speak', speechbarComponent.speak.bind(speechbarComponent), 0, speechbarComponent);\n      this.addChild(this.speak);\n    }\n    if (displayedButtons.showHomeButton) {\n      this.home = new ScannableButton('Home', speechbarComponent.home.bind(speechbarComponent), 1, speechbarComponent);\n      this.addChild(this.home);\n    }\n    if (speakOnSpeechbarClick) {\n      this.speechbar = new ScannableButton('speechbar', speechbarComponent.speechbarClick.bind(speechbarComponent), 2, speechbarComponent);\n      this.addChild(this.speechbar);\n    }\n    if (displayedButtons.showBackspaceButton) {\n      this.backspace = new ScannableButton('Backspace', speechbarComponent.backspace.bind(speechbarComponent), 3, speechbarComponent);\n      this.addChild(this.backspace);\n    }\n    if (displayedButtons.showClearButton) {\n      this.clear = new ScannableButton('Clear', speechbarComponent.clear.bind(speechbarComponent), 4, speechbarComponent);\n      this.addChild(this.clear);\n    }\n  }\n\n  isHighlighted(): boolean {\n    return this.speechbarComponent.scanningModel && this.speechbarComponent.scanningModel.currentHighlight === this;\n  }\n\n  isSelected(): boolean {\n    return this.speechbarComponent.scanningModel && this.speechbarComponent.scanningModel.currentSelection === this;\n  }\n}\n\nclass ScannableSpeechbarProvider extends Subscriber<ScanningModel> implements ScannableCollectionProvider {\n  private rows: ScannableSpeechbarRow[];\n\n  constructor(displayedButtons: ButtonDisplayConfig, speakOnSpeechbarClick: boolean, speechbarComponent: SpeechbarComponent) {\n    super((scanningModel: ScanningModel) => {\n      speechbarComponent.scanningModel = scanningModel;\n\n      if (speechbarComponent.scanningModel.currentSelection &&\n        speechbarComponent.scanningModel.currentSelection.type === ScannableButton.TYPE) {\n        (<ScannableButton>speechbarComponent.scanningModel.currentSelection).handler();\n      }\n    });\n    this.rows = [new ScannableSpeechbarRow(displayedButtons, speakOnSpeechbarClick, speechbarComponent)];\n  }\n\n  getScannableCollections(): ScannableCollection[] {\n    return this.rows;\n  }\n}\n\n@Component({\n  selector: 'app-speechbar',\n  templateUrl: './speechbar.component.html',\n  styleUrls: ['./speechbar.component.css']\n})\nexport class SpeechbarComponent implements OnInit, OnDestroy {\n  private _displayedButtons: ButtonDisplayConfig;\n  private _showIconsInSpeechbar: boolean;\n  private speakingSubscription: Subscription;\n  private buttonsSubscription: Subscription;\n  private scanningSubscription: Subscription;\n  speaking: boolean;\n  buttons: Button[];\n  scanningModel: ScanningModel;\n  buttonRow: ScannableSpeechbarRow;\n\n  constructor(\n    private boardService: BoardService,\n    private speechbarService: SpeechbarService,\n    private config: ConfigService,\n    private scanningService: ScanningService,\n    private cdRef: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() {\n    this._displayedButtons = this.config.displayedButtons;\n    this._showIconsInSpeechbar = this.config.showIconsInSpeechbar;\n    const provider = new ScannableSpeechbarProvider(this._displayedButtons, this.config.speakOnSpeechbarClick, this);\n    this.buttonRow = <ScannableSpeechbarRow> provider.getScannableCollections()[0];\n    this.scanningSubscription = this.scanningService.getScanningModel().subscribe(provider);\n    this.speakingSubscription = this.speechbarService.getSpeaking().subscribe(speaking => {\n      this.speaking = speaking;\n      this.cdRef.detectChanges();\n    });\n    this.buttonsSubscription = this.speechbarService.getButtons().subscribe(buttons => {\n      this.buttons = buttons;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.speakingSubscription) {\n      this.speakingSubscription.unsubscribe();\n    }\n    if (this.buttonsSubscription) {\n      this.buttonsSubscription.unsubscribe();\n    }\n    if (this.scanningSubscription) {\n      this.scanningSubscription.unsubscribe();\n    }\n  }\n\n  get displayedButtons(): ButtonDisplayConfig {\n    return this._displayedButtons;\n  }\n\n  get showIconsInSpeechbar(): boolean {\n    return this._showIconsInSpeechbar;\n  }\n\n  speechbarClick() {\n    if (this.config.speakOnSpeechbarClick) {\n      this.speechbarService.speak();\n    }\n  }\n\n  speak() {\n    this.speechbarService.speak();\n  }\n\n  home() {\n    this.boardService.home();\n  }\n\n  backspace() {\n    this.speechbarService.backspace();\n  }\n\n  clear() {\n    this.speechbarService.clear();\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport * as urlParse from 'url-parse';\n\nexport class UrlUtils {\n  public getSlug(url: string): string {\n    const pathname = this.getPathname(url);\n    const bits = pathname.split('/');\n    return bits.pop();\n  }\n\n  public getPathname(url: string): string {\n    return urlParse(url).pathname;\n  }\n}\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\n// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"tag\": \"DEV ONLY\"\n};\n/* tslint:enable */\n","/* ::START::LICENCE::\nCopyright eQualityTime ©2018\nThis file is part of OVFPlayer.\nOVFPlayer is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nOVFPlayer is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with OVFPlayer.  If not, see <https://www.gnu.org/licenses/>.\n::END::LICENCE:: */\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .then(() => {\n    registerServiceWorker('service-worker');\n  });\n\nfunction registerServiceWorker(swName: string) {\n  if (environment.production && 'serviceWorker' in navigator) {\n    navigator.serviceWorker\n      .register(`/ovfplayer/${swName}.js`)\n      .then(reg => {\n        console.log('Successful service worker registration', reg);\n      })\n      .catch(err =>\n        console.error('Service worker registration failed', err)\n      );\n  } else if (environment.production) {\n    console.error('Service Worker API is not supported in current browser');\n  }\n}\n"],"sourceRoot":""}